{"version":3,"sources":["context/AppContext.ts","components/AppNavigation.tsx","context/AppReducer.ts","utils/game.ts","reducers/PokemonReducer.ts","hooks/useAppContextActions.ts","utils/time.ts","components/GameInfo.tsx","components/LineCard.tsx","components/LineRow.tsx","components/GameOverlay.tsx","components/PokemonCard.tsx","components/PokemonRow.tsx","components/GamePokemon.tsx","components/GameSettings.tsx","assets/sound/menu-open.mp3","assets/sound/disable-sound.mp3","assets/sound/enable-sound.mp3","assets/sound/bite.mp3","assets/sound/fanfare.mp3","assets/sound/glug-a.mp3","assets/sound/rising-pops.mp3","assets/sound/game-completion.wav","assets/sound/gamers-fail-game.mp3","assets/sound/time-limited.wav","assets/sound/1-trieu-like.mp3","hooks/usePlaySound.ts","pages/GamePokemonPage.tsx","hooks/useGamePokemonActions.ts","context/AppProvider.tsx","components/Route.tsx","pages/BoardGamePage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Game","GameMode","GameStatus","Page","Direction","PointType","AppNavigation","navItems","className","map","index","label","action","onClick","AppAction","gameOptions","EASY","row","col","timing","bonusTime","NORMAL","HARD","initialGameSettings","name","settings","audio","mode","initialGameState","selectedPokemons","connectingLinePoints","pokemons","matrix","running","status","PENDING","initialState","page","BOARD","gameSettings","gameState","AppContext","createContext","state","dispatch","BASE_URL","pokemonList","id","matched","image","shufflePokemonList","nonShuffleList","shuffledPokemonList","sort","Math","random","shuffledlistPokemon","pokemon","nid","nanoid","reShufflePokemonList","arrayPokemons","objectList","arrayList","Object","keys","key","push","convertObjectToArrayList","makeListPokemons","clonePokemonList","total","slicePokemonList","slice","nonShufflePokemonList","generatePokemonMatrix","rowSetting","colSetting","totalCol","totalRow","pokemonKeys","pokemonMatrix","undefined","borderPoint","pokemonKey","pop","hasConnectLine","point1","point2","pathPoints","fromPoint","toPoint","matrixTotalRow","matrixTotalCol","tempMatrix","newMatrix","length","i","cloneMatrix","matrixPoints","matrixTrackingPoints","rowIndex","colIndex","dRow","dCol","queue","currentPoint","shift","trackedPoints","trackPoint","findPath","connected","checkPointInLine","currentPosition","find","matchingLinePoint","rotatePokemonsReducer","selectPokemonCardReducer","payload","selectedPokemon1","selectedPokemon2","limitRow","limitCol","reduce","newPathPoints","arrayPoints","type","LINE","direction","prevIndex","END","prevPoint","TOP","BOTTOM","LEFT","RIGHT","extraPoint","START","newCurrentPoint","drawPath","AppReducer","NAVIGATE_PAGE","SET_GAME","setGameReducer","START_GAME","startGameReducer","FAILED_GAME","COMPLETED_GAME","changeGameStatusReducer","REPLAY_GAME","replayGameReducer","EXIT_GAME","exitGameReducer","CHECK_RULE","ROTATE_POKEMONS","UNSELECT_POKEMON","unSelectPokemonCardReducer","SELECT_POKEMON","CHANGE_GAME_MODE","currentMode","newMode","changeGameModeReducer","Error","useAppContextActions","useContext","getState","navigate","currentPage","getGameState","getGameSettings","timeConvert","num","minutes","floor","toString","padStart","GameInfo","failedGame","gameSound","gamePoints","timingSetting","useState","limitTime","setLimitTime","useEffect","timeoutId","setTimeout","playNearlyEndTimeSound","clearTimeout","LineCard","point","pointClass","lineRef","useRef","current","classList","remove","ref","propsAreEquals","prevProps","nextProps","memo","LineRow","cards","_","GameOverlay","columnCards","Array","fill","PokemonCard","isSelected","selectPokemon","selected","hidden","style","backgroundImage","PokemonRow","findIndex","GamePokemon","GameSettings","changeGameMode","usePlaySound","defaultConfigSound","interrupt","useSound","menuOpen","playMenuOpen","disableSound","playDisableSound","enableSound","playEnableSound","fanfareSound","playFanfareSound","glugSound","playGlugSound","biteSound","playBiteSound","risingPopSound","playRisingPopSound","nearlyEndTimeSound","completeGameSound","playCompleteGameSound","failedGameSound","playFailedGameSound","gameSong","playGameSong","stopGameSong","stop","pauseGameSong","pause","durationGameSong","duration","GamePokemonPage","initGame","POKEMON","FAILED","completedGame","COMPLETED","rotatePokemons","replayGame","exitGame","startGame","pokemonId","count","document","body","addEventListener","e","preventDefault","removeEventListener","useGamePokemonActions","checkEqual","AppProvider","children","useReducer","Provider","value","Route","component","match","BoardGamePage","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cb5f4148.chunk.js","sourcesContent":["import { createContext, Dispatch } from \"react\";\nimport { Action } from \"./AppReducer\";\n\nexport type Pokemon = {\n  id: string;\n  matched: boolean;\n  nid?: string;\n  image?: string;\n};\n\nexport enum Game {\n  POKEMON = \"pokemon\",\n}\n\nexport enum GameMode {\n  HARD = \"hard\",\n  NORMAL = \"normal\",\n  EASY = \"easy\",\n}\n\nexport enum GameStatus {\n  PENDING = \"pending\",\n  COMPLETED = \"completed\",\n  FAILED = \"failed\",\n}\n\nexport enum Page {\n  BOARD = \"board\",\n  POKEMON = \"pokemon\",\n}\n\nexport enum Direction {\n  LEFT = \"left\",\n  RIGHT = \"right\",\n  TOP = \"top\",\n  BOTTOM = \"bottom\",\n}\n\nexport enum PointType {\n  START = \"start\",\n  END = \"end\",\n  LINE = \"line\",\n}\n\nexport type PointCoords = {\n  rowIndex: number;\n  colIndex: number;\n  direction?: Direction;\n  type?: PointType;\n};\n\nexport type PokemonCoords = PointCoords & {\n  nid?: string;\n};\n\nexport type GameSettings = {\n  name: Game | null;\n  settings: {\n    audio: boolean;\n    timing: number;\n    bonusTime: number;\n    mode: GameMode;\n    row: number;\n    col: number;\n  };\n};\n\nexport type GameOptions = {\n  [key in GameMode]: {\n    row: number;\n    col: number;\n    timing: number;\n    bonusTime: number;\n  };\n};\n\nexport type GameState = {\n  selectedPokemons: PokemonCoords[];\n  pokemons: Record<string, Pokemon>;\n  matrix: Pokemon[][];\n  running: boolean;\n  connectingLinePoints: PointCoords[];\n  status: GameStatus;\n};\n\nexport interface AppStore {\n  page: Page;\n  gameSettings: GameSettings;\n  gameState: GameState;\n}\n\nexport const gameOptions: GameOptions = {\n  [GameMode.EASY]: {\n    row: 6,\n    col: 8,\n    timing: 600,\n    bonusTime: 15,\n  },\n  [GameMode.NORMAL]: {\n    row: 8,\n    col: 10,\n    timing: 600,\n    bonusTime: 10,\n  },\n  [GameMode.HARD]: {\n    row: 10,\n    col: 12,\n    timing: 600,\n    bonusTime: 5,\n  },\n};\n\nexport const initialGameSettings: GameSettings = {\n  name: null,\n  settings: {\n    audio: true,\n    timing: gameOptions[GameMode.NORMAL].timing,\n    bonusTime: gameOptions[GameMode.NORMAL].bonusTime,\n    mode: GameMode.NORMAL,\n    row: gameOptions[GameMode.NORMAL].row,\n    col: gameOptions[GameMode.NORMAL].col,\n  },\n};\n\nexport const initialGameState: GameState = {\n  selectedPokemons: [],\n  connectingLinePoints: [],\n  pokemons: {},\n  matrix: [],\n  running: false,\n  status: GameStatus.PENDING,\n};\n\nexport const initialState: AppStore = {\n  page: Page.BOARD,\n  gameSettings: initialGameSettings,\n  gameState: initialGameState,\n};\n\nconst AppContext = createContext<{\n  state: AppStore;\n  dispatch: Dispatch<Action>;\n}>({\n  state: initialState,\n  dispatch: () => null,\n});\n\nexport default AppContext;\n","import { FC, MouseEventHandler } from \"react\";\n\ntype AppNavigationProps = {\n  navItems: { label: string; action: MouseEventHandler }[];\n};\n\nconst AppNavigation: FC<AppNavigationProps> = ({ navItems }) => {\n  return (\n    <nav className=\"navigation\">\n      {navItems.map(({ label, action }, index) => (\n        <button key={`nav-${index}`} onClick={action}>\n          {label}\n        </button>\n      ))}\n    </nav>\n  );\n};\n\nexport default AppNavigation;\n","import { AppStore } from \"./AppContext\";\nimport {\n  changeGameModeReducer,\n  changeGameStatusReducer,\n  exitGameReducer,\n  replayGameReducer,\n  rotatePokemonsReducer,\n  selectPokemonCardReducer,\n  setGameReducer,\n  startGameReducer,\n  unSelectPokemonCardReducer,\n} from \"../reducers/PokemonReducer\";\n\nexport enum AppAction {\n  NAVIGATE_PAGE = \"navigate_page\",\n  START_GAME = \"start_game\",\n  SET_GAME = \"set_game\",\n  FAILED_GAME = \"failed_game\",\n  COMPLETED_GAME = \"completed_game\",\n  RESET_GAME = \"reset_game\",\n  SELECT_POKEMON = \"select_pokemon\",\n  UNSELECT_POKEMON = \"unselect_pokemon\",\n  CHECK_RULE = \"check_rule\",\n  ROTATE_POKEMONS = \"rotate_pokemons\",\n  REPLAY_GAME = \"replay_game\",\n  EXIT_GAME = \"exit_game\",\n  CHANGE_GAME_MODE = \"change_game_mode\",\n}\n\nexport interface Action {\n  type: AppAction;\n  payload?: any;\n}\n\nexport default function AppReducer(\n  state: AppStore,\n  action: Action | undefined\n) {\n  switch (action?.type) {\n    case AppAction.NAVIGATE_PAGE: {\n      return { ...state, page: action.payload };\n    }\n    case AppAction.SET_GAME:\n      return setGameReducer(state, action.payload);\n    case AppAction.START_GAME:\n      return startGameReducer(state);\n    case AppAction.FAILED_GAME:\n    case AppAction.COMPLETED_GAME:\n      return changeGameStatusReducer(state, action.payload);\n    case AppAction.REPLAY_GAME:\n      return replayGameReducer(state);\n    case AppAction.EXIT_GAME:\n      return exitGameReducer(state);\n    case AppAction.CHECK_RULE:\n      return rotatePokemonsReducer(state);\n    case AppAction.ROTATE_POKEMONS:\n      return rotatePokemonsReducer(state);\n    case AppAction.UNSELECT_POKEMON:\n      return unSelectPokemonCardReducer(state);\n    case AppAction.SELECT_POKEMON:\n      return selectPokemonCardReducer(state, action.payload);\n    case AppAction.CHANGE_GAME_MODE:\n      return changeGameModeReducer(state);\n    default:\n      throw new Error();\n  }\n}\n","import { nanoid } from \"nanoid\";\nimport {\n  PointCoords,\n  Pokemon,\n  PokemonCoords,\n  Direction,\n  PointType,\n} from \"../context/AppContext\";\n\nconst BASE_URL =\n  \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/versions/generation-v/black-white\";\n\nexport let pokemonList: Pokemon[] = [\n  { id: \"poke-0\", matched: false, image: `${BASE_URL}/1.png` },\n  { id: \"poke-1\", matched: false, image: `${BASE_URL}/2.png` },\n  { id: \"poke-2\", matched: false, image: `${BASE_URL}/3.png` },\n  { id: \"poke-3\", matched: false, image: `${BASE_URL}/4.png` },\n  { id: \"poke-5\", matched: false, image: `${BASE_URL}/5.png` },\n  { id: \"poke-4\", matched: false, image: `${BASE_URL}/6.png` },\n  { id: \"poke-6\", matched: false, image: `${BASE_URL}/7.png` },\n  { id: \"poke-7\", matched: false, image: `${BASE_URL}/8.png` },\n  { id: \"poke-8\", matched: false, image: `${BASE_URL}/9.png` },\n  { id: \"poke-9\", matched: false, image: `${BASE_URL}/10.png` },\n  { id: \"poke-10\", matched: false, image: `${BASE_URL}/11.png` },\n  { id: \"poke-11\", matched: false, image: `${BASE_URL}/12.png` },\n  { id: \"poke-12\", matched: false, image: `${BASE_URL}/13.png` },\n  { id: \"poke-13\", matched: false, image: `${BASE_URL}/14.png` },\n  { id: \"poke-14\", matched: false, image: `${BASE_URL}/15.png` },\n  { id: \"poke-15\", matched: false, image: `${BASE_URL}/16.png` },\n  { id: \"poke-16\", matched: false, image: `${BASE_URL}/17.png` },\n  { id: \"poke-17\", matched: false, image: `${BASE_URL}/18.png` },\n  { id: \"poke-18\", matched: false, image: `${BASE_URL}/19.png` },\n  { id: \"poke-19\", matched: false, image: `${BASE_URL}/20.png` },\n  { id: \"poke-20\", matched: false, image: `${BASE_URL}/21.png` },\n  { id: \"poke-21\", matched: false, image: `${BASE_URL}/22.png` },\n  { id: \"poke-22\", matched: false, image: `${BASE_URL}/23.png` },\n  { id: \"poke-23\", matched: false, image: `${BASE_URL}/24.png` },\n  { id: \"poke-24\", matched: false, image: `${BASE_URL}/25.png` },\n  { id: \"poke-25\", matched: false, image: `${BASE_URL}/26.png` },\n  { id: \"poke-26\", matched: false, image: `${BASE_URL}/27.png` },\n  { id: \"poke-27\", matched: false, image: `${BASE_URL}/28.png` },\n  { id: \"poke-28\", matched: false, image: `${BASE_URL}/29.png` },\n  { id: \"poke-29\", matched: false, image: `${BASE_URL}/30.png` },\n  { id: \"poke-30\", matched: false, image: `${BASE_URL}/31.png` },\n  { id: \"poke-31\", matched: false, image: `${BASE_URL}/32.png` },\n  { id: \"poke-32\", matched: false, image: `${BASE_URL}/33.png` },\n  { id: \"poke-33\", matched: false, image: `${BASE_URL}/34.png` },\n  { id: \"poke-34\", matched: false, image: `${BASE_URL}/35.png` },\n  { id: \"poke-35\", matched: false, image: `${BASE_URL}/36.png` },\n  { id: \"poke-36\", matched: false, image: `${BASE_URL}/37.png` },\n  { id: \"poke-37\", matched: false, image: `${BASE_URL}/38.png` },\n  { id: \"poke-38\", matched: false, image: `${BASE_URL}/39.png` },\n  { id: \"poke-39\", matched: false, image: `${BASE_URL}/40.png` },\n];\n\nconst convertObjectToArrayList = <Model>(\n  objectList: Record<string, Model>\n): Model[] => {\n  const arrayList: Model[] = [];\n  Object.keys(objectList).map((key) => {\n    arrayList.push(objectList[key]);\n    return key;\n  });\n  return arrayList;\n};\n\nexport const shufflePokemonList = (nonShuffleList: Pokemon[]) => {\n  const shuffledPokemonList = nonShuffleList.sort(() => Math.random() - 0.5);\n  const shuffledlistPokemon: Record<string, Pokemon> = {};\n  shuffledPokemonList.map((pokemon) => {\n    const nid = nanoid();\n    shuffledlistPokemon[nid] = pokemon;\n    return pokemon;\n  });\n\n  return shuffledlistPokemon;\n};\n\nexport const reShufflePokemonList = (pokemonList: Record<string, Pokemon>) => {\n  const arrayPokemons = convertObjectToArrayList(pokemonList);\n\n  return shufflePokemonList(arrayPokemons);\n};\n\nexport const makeListPokemons = (row: number, col: number) => {\n  const clonePokemonList: Pokemon[] = [];\n  pokemonList.map((pokemon) => {\n    clonePokemonList.push(pokemon);\n    return pokemon;\n  });\n  const total = (row * col) / 4;\n  const slicePokemonList = clonePokemonList.slice(0, total);\n  const nonShufflePokemonList = [\n    ...slicePokemonList,\n    ...slicePokemonList,\n    ...slicePokemonList,\n    ...slicePokemonList,\n  ];\n\n  return shufflePokemonList(nonShufflePokemonList);\n};\n\nexport const generatePokemonMatrix = (\n  pokemons: Record<string, Pokemon>,\n  rowSetting: number = 8,\n  colSetting: number = 10\n): Pokemon[][] => {\n  const totalCol = colSetting + 2;\n  const totalRow = rowSetting + 2;\n  const pokemonKeys = Object.keys(pokemons);\n  const pokemonMatrix: Pokemon[][] = [];\n\n  for (let row = 0; row < totalRow; row++) {\n    if (pokemonMatrix[row] === undefined) pokemonMatrix[row] = [];\n    for (let col = 0; col < totalCol; col++) {\n      if (\n        row === 0 ||\n        row === totalRow - 1 ||\n        col === 0 ||\n        col === totalCol - 1\n      ) {\n        const id = nanoid();\n        const borderPoint = { nid: id, id, matched: true };\n        pokemonMatrix[row].push(borderPoint);\n      } else {\n        const pokemonKey = pokemonKeys.pop();\n        if (pokemonKey) {\n          const pokemon = { ...pokemons[pokemonKey], nid: pokemonKey };\n          pokemonMatrix[row].push(pokemon);\n        }\n      }\n    }\n  }\n\n  return pokemonMatrix as Pokemon[][];\n};\n\nconst cloneMatrix = (matrix: Pokemon[][]) => {\n  const newMatrix = [];\n  const length = matrix.length;\n\n  for (let i = 0; i < length; i++) {\n    newMatrix[i] = matrix[i].slice();\n  }\n\n  return newMatrix;\n};\n\nexport const findPath = (\n  fromPoint: PointCoords,\n  toPoint: PointCoords,\n  matrix: Pokemon[][],\n  totalRow: number,\n  totalCol: number\n) => {\n  const matrixTotalRow = totalRow + 2;\n  const matrixTotalCol = totalCol + 2;\n  const tempMatrix = cloneMatrix(matrix);\n  const matrixPoints: boolean[][] = [];\n  const matrixTrackingPoints: (PointCoords | undefined)[][] = [];\n\n  for (let rowIndex = 0; rowIndex < matrixTotalRow; ++rowIndex) {\n    matrixPoints.push([]);\n    matrixTrackingPoints.push([]);\n    for (let colIndex = 0; colIndex < matrixTotalCol; ++colIndex) {\n      const pokemon = { ...tempMatrix[rowIndex][colIndex] };\n      matrixPoints[rowIndex].push(pokemon.matched);\n      matrixTrackingPoints[rowIndex].push(undefined);\n    }\n  }\n  const dRow: number[] = [-1, 0, 1, 0];\n  const dCol: number[] = [0, 1, 0, -1];\n  const queue = [];\n  queue.push(toPoint);\n  matrixTrackingPoints[toPoint.rowIndex][toPoint.colIndex] = {\n    rowIndex: -2,\n    colIndex: -2,\n  };\n\n  matrixPoints[fromPoint.rowIndex][fromPoint.colIndex] = true;\n  matrixPoints[toPoint.rowIndex][toPoint.colIndex] = true;\n\n  while (queue.length) {\n    const currentPoint = queue.shift();\n\n    if (currentPoint) {\n      if (\n        currentPoint?.rowIndex === fromPoint.rowIndex &&\n        currentPoint?.colIndex === fromPoint.colIndex\n      ) {\n        break;\n      }\n      for (let index = 0; index < 4; index++) {\n        let rowIndex: number = currentPoint.rowIndex + dRow[index];\n        let colIndex: number = currentPoint.colIndex + dCol[index];\n        while (\n          rowIndex >= 0 &&\n          rowIndex < matrixTotalRow &&\n          colIndex >= 0 &&\n          colIndex < matrixTotalCol &&\n          matrixPoints[rowIndex][colIndex] === true\n        ) {\n          if (matrixTrackingPoints[rowIndex][colIndex] === undefined) {\n            matrixTrackingPoints[rowIndex][colIndex] = currentPoint;\n            queue.push({ rowIndex, colIndex });\n          }\n          rowIndex += dRow[index];\n          colIndex += dCol[index];\n        }\n      }\n    }\n  }\n\n  const trackedPoints: PointCoords[] = [];\n  let trackPoint: PointCoords = { ...fromPoint };\n\n  if (matrixTrackingPoints[trackPoint.rowIndex][trackPoint.colIndex]) {\n    while (trackPoint.rowIndex !== -2 && trackPoint.colIndex !== -2) {\n      trackedPoints.push({\n        rowIndex: trackPoint.rowIndex,\n        colIndex: trackPoint.colIndex,\n      });\n      trackPoint = {\n        ...(matrixTrackingPoints[trackPoint.rowIndex][\n          trackPoint.colIndex\n        ] as PointCoords),\n      };\n    }\n  }\n\n  return trackedPoints;\n};\n\nexport const hasConnectLine = (\n  point1: PokemonCoords,\n  point2: PokemonCoords,\n  matrix: Pokemon[][],\n  totalRow: number,\n  totalCol: number\n) => {\n  const pathPoints = findPath(point1, point2, matrix, totalRow, totalCol);\n\n  return {\n    connected: pathPoints.length >= 2 && pathPoints.length <= 4,\n    pathPoints,\n  };\n};\n\nexport const checkPointInLine = (\n  connectingLinePoints: PointCoords[],\n  currentPosition: PointCoords\n) => {\n  const { rowIndex, colIndex } = currentPosition;\n\n  return connectingLinePoints.find(\n    (matchingLinePoint) =>\n      matchingLinePoint.rowIndex === rowIndex &&\n      matchingLinePoint.colIndex === colIndex\n  );\n};\n\nexport const drawPath = (\n  pathPoints: PointCoords[],\n  totalRow: number,\n  totalCol: number\n) => {\n  const limitRow = totalRow + 2;\n  const limitCol = totalCol + 2;\n  return pathPoints.reduce(\n    (newPathPoints, currentPoint, index, arrayPoints) => {\n      let type: PointType = PointType.LINE;\n      let direction: Direction | undefined = undefined;\n      const nextIndex = index + 1;\n      const prevIndex = index - 1;\n\n      if (arrayPoints[nextIndex] === undefined) {\n        type = PointType.END;\n      }\n\n      if (arrayPoints[prevIndex]) {\n        const prevPoint = arrayPoints[prevIndex];\n        if (prevPoint.rowIndex > currentPoint.rowIndex) {\n          direction = Direction.TOP;\n        } else if (prevPoint.rowIndex < currentPoint.rowIndex) {\n          direction = Direction.BOTTOM;\n        } else {\n          if (prevPoint.colIndex > currentPoint.colIndex) {\n            direction = Direction.LEFT;\n          } else {\n            direction = Direction.RIGHT;\n          }\n        }\n\n        let extraPoint: PointCoords | undefined = {\n          ...currentPoint,\n          direction,\n          type: PointType.LINE,\n        };\n\n        do {\n          switch (extraPoint.direction) {\n            case Direction.BOTTOM:\n              extraPoint.rowIndex--;\n              if (extraPoint.rowIndex < 0) {\n                extraPoint = undefined;\n              }\n\n              break;\n\n            case Direction.TOP:\n              extraPoint.rowIndex++;\n              if (extraPoint.rowIndex >= limitRow) {\n                extraPoint = undefined;\n              }\n              break;\n\n            case Direction.LEFT:\n              extraPoint.colIndex++;\n              if (extraPoint.colIndex >= limitCol) {\n                extraPoint = undefined;\n              }\n              break;\n\n            case Direction.RIGHT:\n              extraPoint.colIndex--;\n              if (extraPoint.colIndex < 0) {\n                extraPoint = undefined;\n              }\n              break;\n\n            default:\n              break;\n          }\n          if (extraPoint === undefined) {\n            break;\n          }\n          if (\n            extraPoint.rowIndex === prevPoint.rowIndex &&\n            extraPoint.colIndex === prevPoint.colIndex\n          ) {\n            break;\n          }\n\n          newPathPoints.push({ ...extraPoint });\n        } while (extraPoint !== undefined);\n      } else {\n        type = PointType.START;\n      }\n      const newCurrentPoint = { ...currentPoint, direction, type };\n\n      newPathPoints.push(newCurrentPoint);\n\n      return newPathPoints;\n    },\n    [] as PointCoords[]\n  );\n};\n","import {\n  AppStore,\n  GameMode,\n  gameOptions,\n  GameState,\n  GameStatus,\n  initialGameState,\n  Page,\n  PointCoords,\n} from \"../context/AppContext\";\nimport {\n  hasConnectLine,\n  generatePokemonMatrix,\n  makeListPokemons,\n  reShufflePokemonList,\n  drawPath,\n} from \"../utils/game\";\n\nexport const setGameReducer = (state: AppStore, payload: any): AppStore => {\n  const { row, col } = state.gameSettings.settings;\n  const pokemons = makeListPokemons(row, col);\n  const matrix = generatePokemonMatrix(pokemons, row, col);\n\n  return {\n    ...state,\n    gameSettings: {\n      ...state.gameSettings,\n      ...payload,\n    },\n    gameState: {\n      ...state.gameState,\n      selectedPokemons: [],\n      pokemons,\n      matrix: [...matrix],\n    },\n  };\n};\n\nexport const startGameReducer = (state: AppStore): AppStore => {\n  return {\n    ...state,\n    gameState: { ...state.gameState, running: true },\n  };\n};\n\nexport const replayGameReducer = (state: AppStore): AppStore => {\n  const { row, col } = state.gameSettings.settings;\n  const pokemons = makeListPokemons(row, col);\n  const matrix = generatePokemonMatrix(pokemons, row, col);\n\n  return {\n    ...state,\n    gameState: {\n      running: false,\n      connectingLinePoints: [],\n      selectedPokemons: [],\n      pokemons,\n      status: GameStatus.PENDING,\n      matrix: [...matrix],\n    },\n  };\n};\n\nexport const exitGameReducer = (state: AppStore): AppStore => {\n  return {\n    ...state,\n    page: Page.BOARD,\n    gameState: { ...initialGameState },\n  };\n};\n\nexport const rotatePokemonsReducer = (state: AppStore): AppStore => {\n  const { row, col } = state.gameSettings.settings;\n  const pokemons = reShufflePokemonList(state.gameState.pokemons);\n  const matrix = generatePokemonMatrix(pokemons, row, col);\n\n  return {\n    ...state,\n    gameState: {\n      ...state.gameState,\n      connectingLinePoints: [],\n      selectedPokemons: [],\n      pokemons,\n      matrix,\n    },\n  };\n};\n\nexport const unSelectPokemonCardReducer = (state: AppStore): AppStore => {\n  return {\n    ...state,\n    gameState: {\n      ...state.gameState,\n      selectedPokemons: [],\n    },\n  };\n};\n\nexport const selectPokemonCardReducer = (\n  state: AppStore,\n  payload: any\n): AppStore => {\n  let matrix = state.gameState?.matrix ? [...state.gameState?.matrix] : [];\n  const selectedPokemons = state.gameState?.selectedPokemons\n    ? [...state.gameState?.selectedPokemons]\n    : [];\n\n  if (selectedPokemons.length >= 2) {\n    selectedPokemons.length = 0;\n  }\n\n  selectedPokemons.push(payload);\n\n  const pokemons = state.gameState?.pokemons\n    ? { ...state.gameState?.pokemons }\n    : {};\n\n  const { row: rowSetting, col: colSetting } = state.gameSettings.settings;\n  const [selectedPokemon1, selectedPokemon2] = selectedPokemons;\n\n  let connectingLinePoints: PointCoords[] = [];\n\n  if (\n    selectedPokemon1?.nid &&\n    selectedPokemon2?.nid &&\n    pokemons[selectedPokemon1.nid].id === pokemons[selectedPokemon2.nid].id\n  ) {\n    const { connected, pathPoints } = hasConnectLine(\n      selectedPokemon1,\n      selectedPokemon2,\n      matrix,\n      rowSetting,\n      colSetting\n    );\n\n    if (connected) {\n      connectingLinePoints = drawPath(pathPoints, rowSetting, colSetting);\n\n      pokemons[selectedPokemon1.nid] = {\n        ...pokemons[selectedPokemon1.nid],\n        matched: true,\n      };\n      pokemons[selectedPokemon2.nid] = {\n        ...pokemons[selectedPokemon2.nid],\n        matched: true,\n      };\n      matrix = generatePokemonMatrix(pokemons, rowSetting, colSetting);\n    } else {\n      selectedPokemons.length = 0;\n    }\n  } else {\n    if (selectedPokemons.length === 2) {\n      selectedPokemons.length = 0;\n      connectingLinePoints = [{ rowIndex: -1, colIndex: -1 }];\n    }\n  }\n\n  return {\n    ...state,\n    gameState: {\n      running: true,\n      connectingLinePoints,\n      pokemons,\n      matrix,\n      selectedPokemons,\n    } as GameState,\n  };\n};\n\nexport const changeGameModeReducer = (state: AppStore): AppStore => {\n  const currentMode = state.gameSettings.settings.mode;\n  let newMode = GameMode.NORMAL;\n  switch (currentMode) {\n    case GameMode.NORMAL:\n      newMode = GameMode.HARD;\n      break;\n\n    case GameMode.HARD:\n      newMode = GameMode.EASY;\n      break;\n\n    default:\n      newMode = GameMode.NORMAL;\n      break;\n  }\n\n  const { row, col, timing, bonusTime } = gameOptions[newMode];\n  const pokemons = makeListPokemons(row, col);\n  const matrix = generatePokemonMatrix(pokemons, row, col);\n\n  return {\n    ...state,\n    gameSettings: {\n      ...state.gameSettings,\n      settings: {\n        ...state.gameSettings.settings,\n        mode: newMode,\n        timing,\n        row,\n        col,\n        bonusTime,\n      },\n    },\n    gameState: {\n      ...state.gameState,\n      matrix,\n      pokemons,\n      running: false,\n      connectingLinePoints: [],\n      selectedPokemons: [],\n    },\n  };\n};\n\nexport const changeGameStatusReducer = (\n  state: AppStore,\n  payload: any\n): AppStore => {\n  return {\n    ...state,\n    gameState: {\n      ...state.gameState,\n      status: payload,\n    },\n  };\n};\n","import { useContext } from \"react\";\nimport AppContext, { AppStore, Page } from \"../context/AppContext\";\nimport { AppAction } from \"../context/AppReducer\";\n\nexport default function useAppContextActions() {\n  const { state, dispatch } = useContext(AppContext);\n\n  const navigate = (page: Page) => {\n    dispatch({ type: AppAction.NAVIGATE_PAGE, payload: page });\n  };\n\n  const getState = (key: keyof AppStore) => state[key];\n\n  const getGameState = () => {\n    return { ...state.gameState };\n  };\n\n  const getGameSettings = () => {\n    return { ...state.gameSettings };\n  };\n\n  return {\n    getState,\n    dispatch,\n    navigate,\n    currentPage: state.page,\n    getGameState,\n    getGameSettings,\n  };\n}\n","export function timeConvert(num: number) {\n  if (num <= 0) {\n    return \"00:00\";\n  }\n  const hours = Math.floor(num / 60);\n  const minutes = num % 60;\n  return (\n    hours.toString().padStart(2, \"0\") +\n    \":\" +\n    minutes.toString().padStart(2, \"0\")\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { GameStatus } from \"../context/AppContext\";\nimport useAppContextActions from \"../hooks/useAppContextActions\";\nimport { timeConvert } from \"../utils/time\";\n\ntype GameInfoProps = {\n  failedGame: () => void;\n  gameSound: Record<string, Function>;\n  gamePoints: number;\n};\n\nconst GameInfo = ({ failedGame, gameSound, gamePoints }: GameInfoProps) => {\n  const { getGameSettings, getGameState } = useAppContextActions();\n  const gameSettings = getGameSettings();\n  const gameState = getGameState();\n  const { timing: timingSetting, bonusTime } = gameSettings.settings;\n\n  let [limitTime, setLimitTime] = useState<number>(timingSetting);\n\n  useEffect(() => {\n    setLimitTime(limitTime + bonusTime);\n  }, [gamePoints]);\n\n  useEffect(() => {\n    let timeoutId: NodeJS.Timeout | undefined = undefined;\n\n    if (gameState.running || gameState.status !== GameStatus.PENDING) {\n      timeoutId = setTimeout(() => {\n        if (timingSetting > 0) {\n          if (limitTime === 60) {\n            gameSound.playNearlyEndTimeSound();\n          }\n          if (limitTime <= 0) {\n            failedGame();\n          } else {\n            setLimitTime(limitTime - 1);\n          }\n        } else {\n          setLimitTime(limitTime + 1);\n        }\n      }, 1000);\n    } else {\n      setLimitTime(timingSetting);\n    }\n    return () => {\n      if (timeoutId) clearTimeout(timeoutId);\n    };\n  }, [limitTime, gameState.running, timingSetting]);\n\n  return (\n    <div className=\"game-info\">\n      <h1 className=\"game-title\">{gameSettings?.name}</h1>\n      <p className=\"game-score\">Time bonus: {(gamePoints / 2) * bonusTime}</p>\n      <p className=\"game-score\">Timing remaining: {timeConvert(limitTime)}</p>\n    </div>\n  );\n};\n\nexport default GameInfo;\n","import { FC, memo, useEffect, useRef } from \"react\";\nimport { PointCoords } from \"../context/AppContext\";\n\ntype LineCardProps = {\n  point?: PointCoords;\n  rowIndex: number;\n  colIndex: number;\n};\n\nconst LineCard: FC<LineCardProps> = ({ point, rowIndex, colIndex }) => {\n  const type = point && point.type ? `${point.type}-point` : \"\";\n  const direction =\n    point && point.direction ? `${point.direction}-direction` : \"\";\n  const pointClass = point ? `in-line ${direction} ${type}` : \"\";\n  const lineRef = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    setTimeout(() => {\n      if (lineRef.current) {\n        direction && lineRef.current.classList.remove(direction);\n        type && lineRef.current.classList.remove(type);\n      }\n    }, 500);\n    return () => {};\n  }, [lineRef, direction, type]);\n\n  return (\n    <div ref={lineRef} className={`line-card ${pointClass}`}>\n      <strong>\n        {rowIndex},{colIndex}\n      </strong>\n    </div>\n  );\n};\n\nfunction propsAreEquals(prevProps: LineCardProps, nextProps: LineCardProps) {\n  if (prevProps.point === undefined && nextProps.point === undefined) {\n    return true;\n  }\n\n  return (\n    prevProps.point?.direction === nextProps.point?.direction &&\n    prevProps.point?.type === nextProps.point?.type\n  );\n}\n\nexport default memo(LineCard, propsAreEquals);\n","import { FC } from \"react\";\nimport { PointCoords, Pokemon } from \"../context/AppContext\";\nimport { checkPointInLine } from \"../utils/game\";\nimport LineCard from \"./LineCard\";\n\ntype LineRowProps = {\n  cards: Pokemon[] | number[];\n  connectingLinePoints: PointCoords[];\n  rowIndex: number;\n};\n\nconst LineRow: FC<LineRowProps> = ({\n  connectingLinePoints,\n  cards,\n  rowIndex,\n}) => {\n  return (\n    <>\n      {cards.map((_, colIndex) => (\n        <LineCard\n          key={`card-${colIndex}`}\n          rowIndex={rowIndex}\n          colIndex={colIndex}\n          point={checkPointInLine(connectingLinePoints, { rowIndex, colIndex })}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default LineRow;\n","import { FC } from \"react\";\nimport LineRow from \"./LineRow\";\nimport useAppContextActions from \"../hooks/useAppContextActions\";\n\ntype GameOverlayProps = {};\n\nconst GameOverlay: FC<GameOverlayProps> = () => {\n  const { getGameState, getGameSettings } = useAppContextActions();\n  const { matrix, connectingLinePoints } = getGameState();\n  const {\n    settings: { col, mode },\n  } = getGameSettings();\n\n  const columnCards = new Array(col + 2).fill(false);\n\n  return (\n    <div className={`game-overlay mode-${mode}`}>\n      {matrix &&\n        matrix.map((_, index) => (\n          <LineRow\n            key={`row-${index}`}\n            cards={columnCards}\n            rowIndex={index}\n            connectingLinePoints={connectingLinePoints}\n          />\n        ))}\n    </div>\n  );\n};\n\nexport default GameOverlay;\n","import { FC, memo } from \"react\";\nimport { Pokemon } from \"../context/AppContext\";\n\ntype PokemonCardProps = {\n  pokemon: Pokemon;\n  isSelected: number | boolean;\n  selectPokemon: (\n    pokemonId: string,\n    rowIndex: number,\n    colIndex: number\n  ) => void;\n  rowIndex: number;\n  colIndex: number;\n};\n\nconst PokemonCard: FC<PokemonCardProps> = ({\n  pokemon,\n  isSelected,\n  selectPokemon,\n  rowIndex,\n  colIndex,\n}) => {\n  const selected = isSelected ? \"selected\" : \"\";\n  const hidden = pokemon.matched ? \"hidden\" : \"\";\n\n  return (\n    <div\n      style={{\n        backgroundImage: `url(${pokemon.image ?? \"\"})`,\n      }}\n      className={`pokemon-card ${selected} ${hidden}`}\n      onClick={() => {\n        if (!isSelected && !pokemon.matched && pokemon.nid) {\n          selectPokemon(pokemon.nid, rowIndex, colIndex);\n        }\n      }}\n    >\n      {/* {pokemon.image && (\n        <img key={pokemon.nid} src={pokemon.image} alt={pokemon.id} />\n      )} */}\n    </div>\n  );\n};\n\nfunction propsAreEquals(\n  prevProps: PokemonCardProps,\n  nextProps: PokemonCardProps\n) {\n  return (\n    prevProps.pokemon.nid === nextProps.pokemon.nid &&\n    prevProps.pokemon.image === nextProps.pokemon.image &&\n    prevProps.pokemon.matched === nextProps.pokemon.matched &&\n    prevProps.isSelected === nextProps.isSelected\n  );\n}\n\nexport default memo(PokemonCard, propsAreEquals);\n","import { FC } from \"react\";\nimport { Pokemon, PokemonCoords } from \"../context/AppContext\";\nimport PokemonCard from \"./PokemonCard\";\n\ntype PokemonRowProps = {\n  cards: Pokemon[];\n  selectedPokemons: PokemonCoords[];\n  rowIndex: number;\n  selectPokemon: (\n    pokemonId: string,\n    rowIndex: number,\n    colIndex: number\n  ) => void;\n};\n\nconst PokemonRow: FC<PokemonRowProps> = ({\n  cards,\n  selectedPokemons,\n  rowIndex,\n  selectPokemon,\n}) => {\n  return (\n    <>\n      {cards.map((pokemon, index) => (\n        <PokemonCard\n          key={`card-${index}`}\n          pokemon={pokemon}\n          rowIndex={rowIndex}\n          colIndex={index}\n          selectPokemon={selectPokemon}\n          isSelected={\n            pokemon.nid !== undefined &&\n            selectedPokemons.findIndex(({ nid }) => nid === pokemon.nid) >= 0\n          }\n        />\n      ))}\n    </>\n  );\n};\n\nexport default PokemonRow;\n","import { FC } from \"react\";\nimport PokemonRow from \"./PokemonRow\";\nimport useAppContextActions from \"../hooks/useAppContextActions\";\n\ntype GamePokemonProps = {\n  selectPokemon: (\n    pokemonId: string,\n    rowIndex: number,\n    colIndex: number\n  ) => void;\n};\n\nconst GamePokemon: FC<GamePokemonProps> = ({ selectPokemon }) => {\n  const { getGameState, getGameSettings, dispatch } = useAppContextActions();\n\n  const { matrix, selectedPokemons } = getGameState();\n  const {\n    settings: { mode },\n  } = getGameSettings();\n\n  return (\n    <div className={`game-pokemon mode-${mode}`}>\n      {matrix &&\n        matrix.map((pokemons, index) => (\n          <PokemonRow\n            key={`row-${index}`}\n            rowIndex={index}\n            cards={pokemons}\n            selectedPokemons={selectedPokemons}\n            selectPokemon={selectPokemon}\n          />\n        ))}\n    </div>\n  );\n};\n\nexport default GamePokemon;\n","import { MouseEventHandler } from \"react\";\nimport { GameMode } from \"../context/AppContext\";\n\ntype GameSettingsProps = {\n  mode: GameMode;\n  changeGameMode: MouseEventHandler;\n};\n\nconst GameSettings = ({ mode, changeGameMode }: GameSettingsProps) => {\n  return (\n    <div className=\"game-settings\">\n      <button onClick={changeGameMode}>Mode: {mode}</button>\n    </div>\n  );\n};\n\nexport default GameSettings;\n","export default __webpack_public_path__ + \"static/media/menu-open.019cf647.mp3\";","export default __webpack_public_path__ + \"static/media/disable-sound.477d0574.mp3\";","export default __webpack_public_path__ + \"static/media/enable-sound.00d0be95.mp3\";","export default __webpack_public_path__ + \"static/media/bite.aea7caff.mp3\";","export default __webpack_public_path__ + \"static/media/fanfare.8807360a.mp3\";","export default __webpack_public_path__ + \"static/media/glug-a.b9f1fa99.mp3\";","export default __webpack_public_path__ + \"static/media/rising-pops.7eda816b.mp3\";","export default __webpack_public_path__ + \"static/media/game-completion.a7022fca.wav\";","export default __webpack_public_path__ + \"static/media/gamers-fail-game.1bab0c1d.mp3\";","export default __webpack_public_path__ + \"static/media/time-limited.3894918f.wav\";","export default __webpack_public_path__ + \"static/media/1-trieu-like.90d13956.mp3\";","import useSound from \"use-sound\";\n\nimport menuOpen from \"../assets/sound/menu-open.mp3\";\nimport disableSound from \"../assets/sound/disable-sound.mp3\";\nimport enableSound from \"../assets/sound/enable-sound.mp3\";\nimport biteSound from \"../assets/sound/bite.mp3\";\nimport fanfareSound from \"../assets/sound/fanfare.mp3\";\nimport glugSound from \"../assets/sound/glug-a.mp3\";\nimport risingPopSound from \"../assets/sound/rising-pops.mp3\";\nimport completeGameSound from \"../assets/sound/game-completion.wav\";\nimport failedGameSound from \"../assets/sound/gamers-fail-game.mp3\";\nimport nearlyEndTimeSound from \"../assets/sound/time-limited.wav\";\nimport gameSong from \"../assets/sound/1-trieu-like.mp3\";\n\nexport default function usePlaySound() {\n  const defaultConfigSound = { interrupt: true };\n  const [playMenuOpen] = useSound(menuOpen, defaultConfigSound);\n  const [playDisableSound] = useSound(disableSound, defaultConfigSound);\n  const [playEnableSound] = useSound(enableSound, defaultConfigSound);\n  const [playFanfareSound] = useSound(fanfareSound, defaultConfigSound);\n  const [playGlugSound] = useSound(glugSound, defaultConfigSound);\n  const [playBiteSound] = useSound(biteSound, defaultConfigSound);\n  const [playRisingPopSound] = useSound(risingPopSound, defaultConfigSound);\n  const [playNearlyEndTimeSound] = useSound(\n    nearlyEndTimeSound,\n    defaultConfigSound\n  );\n  const [playCompleteGameSound] = useSound(\n    completeGameSound,\n    defaultConfigSound\n  );\n  const [playFailedGameSound] = useSound(failedGameSound, defaultConfigSound);\n  const [\n    playGameSong,\n    { stop: stopGameSong, pause: pauseGameSong, duration: durationGameSong },\n  ] = useSound(gameSong, defaultConfigSound);\n\n  return {\n    playMenuOpen,\n    playDisableSound,\n    playEnableSound,\n    playFanfareSound,\n    playGlugSound,\n    playBiteSound,\n    playRisingPopSound,\n    playNearlyEndTimeSound,\n    playFailedGameSound,\n    playCompleteGameSound,\n    playGameSong,\n    stopGameSong,\n    pauseGameSong,\n    durationGameSong,\n  };\n}\n","import AppNavigation from \"../components/AppNavigation\";\nimport GameInfo from \"../components/GameInfo\";\nimport GameOverlay from \"../components/GameOverlay\";\nimport GamePokemon from \"../components/GamePokemon\";\nimport GameSettings from \"../components/GameSettings\";\nimport useGamePokemonActions from \"../hooks/useGamePokemonActions\";\nimport { memo } from \"react\";\n\nconst GamePokemonPage = () => {\n  const {\n    replayGame,\n    startGame,\n    rotatePokemons,\n    exitGame,\n    failedGame,\n    changeGameMode,\n    selectPokemon,\n    gameState,\n    gameSettings,\n    gameSound,\n    gamePoints,\n  } = useGamePokemonActions();\n\n  let navItems = [\n    {\n      label: \"Exit game\",\n      action: () => exitGame(),\n    },\n  ];\n\n  if (gameState.running) {\n    navItems = [\n      { label: \"Rotate pokemons\", action: () => rotatePokemons() },\n      { label: \"Re-play game\", action: () => replayGame() },\n      ...navItems,\n    ];\n  } else {\n    navItems = [\n      { label: \"Start game\", action: () => startGame() },\n      ...navItems,\n    ];\n  }\n\n  return (\n    <div className=\"game-container\">\n      <div className=\"game-board\">\n        {gameState.connectingLinePoints.length > 0 && <GameOverlay />}\n        {gameState.running && <GamePokemon selectPokemon={selectPokemon} />}\n      </div>\n      <div className=\"game-control\">\n        <GameInfo\n          failedGame={failedGame}\n          gameSound={gameSound}\n          gamePoints={gamePoints}\n        />\n        {!gameState.running && (\n          <GameSettings\n            mode={gameSettings.settings.mode}\n            changeGameMode={changeGameMode}\n          />\n        )}\n        <AppNavigation navItems={navItems} />\n        <p className=\"mobile-helper\">Scroll down to play game on mobile</p>\n      </div>\n    </div>\n  );\n};\n\nfunction checkEqual() {\n  return false;\n}\n\nexport default memo(GamePokemonPage, checkEqual);\n","import { useEffect, useLayoutEffect } from \"react\";\nimport { Game, GameStatus } from \"../context/AppContext\";\nimport { AppAction } from \"../context/AppReducer\";\nimport useAppContextActions from \"./useAppContextActions\";\nimport usePlaySound from \"./usePlaySound\";\n\nexport default function useGamePokemonActions(row = 4, col = 8) {\n  const {\n    playMenuOpen,\n    playDisableSound,\n    playEnableSound,\n    playFanfareSound,\n    playGlugSound,\n    playBiteSound,\n    playRisingPopSound,\n    playNearlyEndTimeSound,\n    playFailedGameSound,\n    playCompleteGameSound,\n    playGameSong,\n    stopGameSong,\n    pauseGameSong,\n  } = usePlaySound();\n  const { dispatch, getGameState, getGameSettings } = useAppContextActions();\n\n  const initGame = () => {\n    dispatch({\n      type: AppAction.SET_GAME,\n      payload: {\n        name: Game.POKEMON,\n      },\n    });\n  };\n\n  const failedGame = () => {\n    playFailedGameSound();\n    dispatch({\n      type: AppAction.FAILED_GAME,\n      payload: GameStatus.FAILED,\n    });\n  };\n\n  const completedGame = () => {\n    playCompleteGameSound();\n    dispatch({\n      type: AppAction.COMPLETED_GAME,\n      payload: GameStatus.COMPLETED,\n    });\n  };\n\n  const rotatePokemons = () => {\n    playMenuOpen();\n    dispatch({\n      type: AppAction.ROTATE_POKEMONS,\n    });\n  };\n\n  const replayGame = () => {\n    playEnableSound();\n    // pauseGameSong();\n    dispatch({\n      type: AppAction.REPLAY_GAME,\n    });\n  };\n\n  const exitGame = () => {\n    playDisableSound();\n    // pauseGameSong();\n    dispatch({\n      type: AppAction.EXIT_GAME,\n      payload: {\n        name: null,\n      },\n    });\n  };\n\n  const startGame = () => {\n    playFanfareSound();\n    // playGameSong();\n    dispatch({\n      type: AppAction.START_GAME,\n      payload: {\n        name: null,\n      },\n    });\n  };\n\n  const changeGameMode = () => {\n    playMenuOpen();\n    dispatch({\n      type: AppAction.CHANGE_GAME_MODE,\n    });\n  };\n\n  const selectPokemon = (\n    pokemonId: string,\n    rowIndex: number,\n    colIndex: number\n  ) => {\n    playBiteSound();\n    dispatch({\n      type: AppAction.SELECT_POKEMON,\n      payload: { nid: pokemonId, rowIndex, colIndex },\n    });\n  };\n\n  const gameState = getGameState();\n  const gameSettings = getGameSettings();\n\n  const gamePoints = Object.keys(gameState.pokemons).reduce(\n    (count, pokemonId) => {\n      if (gameState.pokemons[pokemonId].matched) count++;\n      return count;\n    },\n    0\n  );\n\n  useEffect(() => {\n    initGame();\n    return () => {};\n  }, []);\n\n  useEffect(() => {\n    document.body.addEventListener(\"contextmenu\", (e) => {\n      e.preventDefault();\n      playDisableSound();\n      dispatch({\n        type: AppAction.UNSELECT_POKEMON,\n      });\n    });\n    return () => {\n      document.body.removeEventListener(\"contextmenu\", (e) => {\n        e.preventDefault();\n        playDisableSound();\n        dispatch({\n          type: AppAction.UNSELECT_POKEMON,\n        });\n      });\n    };\n  }, [gameState.running]);\n\n  useEffect(() => {\n    if (Object.keys(gameState.pokemons).length === gamePoints) {\n      completedGame();\n    }\n  }, [gamePoints]);\n\n  useEffect(() => {\n    if (gameState.connectingLinePoints.length > 1) {\n      playRisingPopSound();\n      // dispatch({\n      //   type: AppAction.CHECK_RULE,\n      // });\n    }\n\n    if (gameState.connectingLinePoints.length === 1) {\n      playGlugSound();\n    }\n\n    if (gameState.selectedPokemons.length === 1) {\n      playBiteSound();\n    }\n  }, [gameState.connectingLinePoints.length]);\n\n  return {\n    row,\n    col,\n    pokemons: gameState.pokemons,\n    gameSettings,\n    gameState,\n    gamePoints,\n    rotatePokemons,\n    replayGame,\n    startGame,\n    exitGame,\n    failedGame,\n    completedGame,\n    changeGameMode,\n    selectPokemon,\n    gameSound: {\n      playMenuOpen,\n      playDisableSound,\n      playEnableSound,\n      playFanfareSound,\n      playGlugSound,\n      playBiteSound,\n      playRisingPopSound,\n      playNearlyEndTimeSound,\n      playFailedGameSound,\n      playCompleteGameSound,\n    },\n  };\n}\n","import { FC, useReducer } from \"react\";\nimport AppContext, { initialState } from \"./AppContext\";\nimport AppReducer from \"./AppReducer\";\n\nconst AppProvider: FC = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  return (\n    <AppContext.Provider value={{ state, dispatch }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport default AppProvider;\n","import { Page } from \"../context/AppContext\";\nimport useAppContextActions from \"../hooks/useAppContextActions\";\n\ninterface RouteProps {\n  component: JSX.Element;\n  match: Page;\n}\n\nconst Route: (props: RouteProps) => JSX.Element | null = ({\n  component,\n  match,\n}) => {\n  const { currentPage } = useAppContextActions();\n\n  return currentPage === match ? component : null;\n};\n\nexport default Route;\n","import AppNavigation from \"../components/AppNavigation\";\nimport { Page } from \"../context/AppContext\";\nimport useAppContextActions from \"../hooks/useAppContextActions\";\nimport usePlaySound from \"../hooks/usePlaySound\";\n\nconst BoardGamePage = () => {\n  const { navigate } = useAppContextActions();\n  const { playMenuOpen } = usePlaySound();\n\n  const navItems = [\n    {\n      label: \"Play game\",\n      action: () => {\n        playMenuOpen();\n        navigate(Page.POKEMON);\n      },\n    },\n  ];\n\n  return (\n    <div className=\"main-board\">\n      <AppNavigation navItems={navItems} />\n    </div>\n  );\n};\n\nexport default BoardGamePage;\n","import \"./App.css\";\nimport GamePokemonPage from \"./pages/GamePokemonPage\";\nimport AppProvider from \"./context/AppProvider\";\nimport { Page } from \"./context/AppContext\";\nimport Route from \"./components/Route\";\nimport BoardGamePage from \"./pages/BoardGamePage\";\n\nfunction App() {\n  return (\n    <AppProvider>\n      <div className=\"app\">\n        <Route match={Page.BOARD} component={<BoardGamePage />} />\n        <Route match={Page.POKEMON} component={<GamePokemonPage />} />\n      </div>\n    </AppProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./wdyr\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}